labs(title="Ggplot2 histogram of Australian Jan and Jun
temperatures",
x="Temperature",
y="Frequency")
ggplot(twomonths, aes(x=Temp, color=Month)) +
geom_histogram(position="identity", alpha=0.5)+
geom_vline(data=meantwomonths,
aes(xintercept=mean,
color=Month),
linetype="dashed")+
labs(title="Ggplot2 histogram of Australian Jan and Jun
temperatures",
x="Temperature",
y="Frequency")
ggplot(twomonths, aes(x=Temp, fill=Month)) +
geom_histogram(position="identity", alpha=0.5)+
geom_vline(data=meantwomonths,
aes(xintercept=mean,
color=Month),
linetype="dashed")+
labs(title="Ggplot2 histogram of Australian Jan and Jun
temperatures",
x="Temperature",
y="Frequency")
ggplot(twomonths, aes(x=Temp, color=Month, fill=Month)) +
geom_histogram(position="identity", alpha=0.5)+
geom_vline(data=meantwomonths,
aes(xintercept=mean,
color=Month),
linetype="dashed")+
labs(title="Ggplot2 histogram of Australian Jan and Jun
temperatures",
x="Temperature",
y="Frequency")
ggplot(twomonths, aes(x=Temp, color=Month, fill=Month)) +
geom_histogram(alpha=0.5)+
geom_vline(data=meantwomonths,
aes(xintercept=mean,
color=Month),
linetype="dashed")+
labs(title="Ggplot2 histogram of Australian Jan and Jun
temperatures",
x="Temperature",
y="Frequency")
ggplot(twomonths, aes(x=Temp, color=Month, fill=Month)) +
geom_histogram(position="identity", alpha=0.5)+
geom_vline(data=meantwomonths,
aes(xintercept=mean,
color=Month),
linetype="dashed")+
labs(title="Ggplot2 histogram of Australian Jan and Jun
temperatures",
x="Temperature",
y="Frequency")
ggplot(twomonths, aes(x=Temp, color=Month, fill=Month)) +
geom_histogram(alpha=0.5)+
geom_vline(data=meantwomonths,
aes(xintercept=mean,
color=Month),
linetype="dashed")+
labs(title="Ggplot2 histogram of Australian Jan and Jun
temperatures",
x="Temperature",
y="Frequency")
ggplot(twomonths, aes(x=Temp, color=Month, fill=Month)) +
geom_histogram(position="identity", alpha=0.5)+
geom_vline(data=meantwomonths,
aes(xintercept=mean,
color=Month),
linetype="dashed")+
labs(title="Ggplot2 histogram of Australian Jan and Jun
temperatures",
x="Temperature",
y="Frequency")
ggplot(twomonths, aes(x=Temp, color=Month, fill=Month)) +
geom_histogram(position="identity")+
geom_vline(data=meantwomonths,
aes(xintercept=mean,
color=Month),
linetype="dashed")+
labs(title="Ggplot2 histogram of Australian Jan and Jun
temperatures",
x="Temperature",
y="Frequency")
ggplot(twomonths, aes(x=Temp, color=Month, fill=Month)) +
geom_histogram(position="identity", alpha=0.5)+
geom_vline(data=meantwomonths,
aes(xintercept=mean,
color=Month),
linetype="dashed")+
labs(title="Ggplot2 histogram of Australian Jan and Jun
temperatures",
x="Temperature",
y="Frequency")
View(t)
data_complete_cases <- squishdata %>%
drop_na()%>%
mutate(Month = factor(Month, levels = c("Jan","Feb","Mar",
"Apr","May","Jun",
"Jul","Aug","Sep",
"Oct","Nov","Dec")))
View(data_complete_cases)
squishdata
data_complete_cases
squishdata$Month
data_complete_cases$Month
# Plot faceted histogram
ggplot(data_complete_cases, aes(x=Temp, na.rm=TRUE))+
geom_histogram(color="black", binwidth = 5)+
labs(title="Ggplot2 faceted histogram of Australian temperatures",
x="Temperature",
y="Frequency")+
facet_grid(Month ~ .)+
theme(plot.title = element_text(hjust = 0.5))
# Plot faceted histogram
ggplot(data_complete_cases, aes(x=Temp, na.rm=TRUE))+
geom_histogram(color="black", binwidth = 30)+
labs(title="Ggplot2 faceted histogram of Australian temperatures",
x="Temperature",
y="Frequency")+
facet_grid(Month ~ .)+
theme(plot.title = element_text(hjust = 0.5))
# Plot faceted histogram
ggplot(data_complete_cases, aes(x=Temp, na.rm=TRUE))+
geom_histogram(color="black", binwidth = 5)+
labs(title="Ggplot2 faceted histogram of Australian temperatures",
x="Temperature",
y="Frequency")+
facet_grid(Month ~ .)+
theme(plot.title = element_text(hjust = 0.5))
# Plot faceted histogram
ggplot(data_complete_cases, aes(x=Temp, na.rm=TRUE))+
geom_histogram(color="black", binwidth = 5)+
labs(title="Ggplot2 faceted histogram of Australian temperatures",
x="Temperature",
y="Frequency")
# Plot faceted histogram
ggplot(data_complete_cases, aes(x=Temp, na.rm=TRUE))+
geom_histogram(color="black", binwidth = 5)+
labs(title="Ggplot2 faceted histogram of Australian temperatures",
x="Temperature",
y="Frequency")+
facet_grid(Month ~ .)
# Plot faceted histogram
ggplot(data_complete_cases, aes(x=Temp, na.rm=TRUE))+
geom_histogram(color="black", binwidth = 5)+
labs(title="Ggplot2 faceted histogram of Australian temperatures",
x="Temperature",
y="Frequency")+
facet_grid(Month ~ .)+
theme(plot.title = element_text(hjust = 0.5))
# Plot faceted histogram
ggplot(data_complete_cases, aes(x=Temp, na.rm=TRUE))+
geom_histogram(color="black", binwidth = 5)+
labs(title="Ggplot2 faceted histogram of Australian temperatures",
x="Temperature",
y="Frequency")+
facet_grid(Month ~ .)
# Plot faceted histogram
ggplot(data_complete_cases, aes(x=Temp, na.rm=TRUE))+
geom_histogram(color="black", binwidth = 5)+
labs(title="Ggplot2 faceted histogram of Australian temperatures",
x="Temperature",
y="Frequency")+
facet_grid(Month ~ .)+
theme(plot.title = element_text(hjust = 0.5))
squishdata %>%
filter(.,Temp==na)
#How about an interactive histogram using plotly…
ibrary(plotly)
#How about an interactive histogram using plotly…
library(plotly)
# split the data for plotly based on month
jan <- squishdata %>%
drop_na() %>%
filter(., Month=="Jan")
jun <- squishdata %>%
drop_na() %>%
filter(., Month=="Jun")
# give axis titles
x <- list (title = "Temperature")
y <- list (title = "Frequency")
# set the bin width
xbinsno<-list(start=0, end=40, size = 2.5)
# plot the histogram calling all the variables we just set
ihist<-plot_ly(alpha = 0.6) %>%
add_histogram(x = jan$Temp,
xbins=xbinsno, name="January") %>%
add_histogram(x = jun$Temp,
xbins=xbinsno, name="June") %>%
layout(barmode = "overlay", xaxis=x, yaxis=y)
ihist
View(x)
# mean per month
meanofall <- squishdata %>%
group_by(Month) %>%
summarise(mean = mean(Temp, na.rm=TRUE))
# print the top 1
head(meanofall, n=1)
View(meanofall)
meanofall <- squishdata %>%
group_by(Month) %>%
summarise(mean = mean(Temp, na.rm=TRUE)) %>%
arrange(desc(Temp))
meanofall <- squishdata %>%
group_by(Month) %>%
summarise(mean = mean(Temp, na.rm=TRUE)) %>%
arrange(desc(mean))
View(meanofall)
# mean per month
meanofall <- squishdata %>%
group_by(Month) %>%
summarise(mean = mean(Temp, na.rm=TRUE))
# print the top 1
head(meanofall, n=1)
View(meanofall)
meanwholeyear=squishdata %>%
summarize(meanyear = mean(Temp, na.rm=TRUE))
View(meanwholeyear)
View(squishdata)
plot(meanwholeyear)
plot(squishdata)
ggplot()
ggplot(squishdata,aex(x=Temp,color=month,fill=month)) +
geom_histogram(position = "identity",alpha=0.5)+
labs(title="Ggplot2 histogram of Australian Jan and Jun
temperatures",
x="Temperature",
y="Frequency")
ggplot(squishdata,aes(x=Temp,color=month,fill=month)) +
geom_histogram(position="identity", alpha=0.5)+
geom_vline(data=meantwomonths,
aes(xintercept=mean,
color=Month),
linetype="dashed")
ggplot(squishdata,aes(x=Temp,color=month,fill=month)) +
geom_histogram(position="identity", alpha=0.5)
View(meantwomonths)
View(twomonths)
View(meanofall)
ggplot(meanofall, aes(x=Temp, color=Month, fill=Month)) +
geom_histogram(position="identity", alpha=0.5)
ggplot(meanofall, aes(x=mean, color=Month, fill=Month)) +
geom_histogram(position="identity", alpha=0.5)
plot(meanofall)
View(Aucitytemp2)
#Add the city names to the rows of AUcitytemp
Aucitytemp2 <- AUcitytemp %>%
as_tibble()%>%
add_column(Site = site, .before = "Jan")
library(sf)
library(here)
library(sf)
library(here)
library(sf)
library(here)
library(sf)
library(here)
Perthtemp <- Aucitytemp2 %>%
filter(site=="Perth")
#Or the row location:
Perthtemp <- Aucitytemp2[3,]
hist(as.numeric(Perthtemp))
View(Perthtemp)
Perthtemp <- Aucitytemp2 %>%
filter(site=="Perth")
#Or the row location:
Perthtemp <- Aucitytemp2[3,]
#Make a histogram of Perth’s temperature.
hist(as.numeric(Perthtemp))
Perthtemp[2,])
Perthtemp[2,]
hist(as.numeric(Perthtemp))
View(Perthtemp)
class(Perthtemp)
Perthtemp <- Aucitytemp2[3, Jan:Dec]
Perthtemp <- Aucitytemp2[3,"Jan":"Dec"]
View(Perthtemp)
Perthtemp <- Aucitytemp2[3,]
#Make a histogram of Perth’s temperature.
hist(as.numeric(Perthtemp))
Perthtemp <- Aucitytemp2[3,3:14]
View(Perthtemp)
#Make a histogram of Perth’s temperature.
hist(as.numeric(Perthtemp))
typeof(Perthtemp)
names(Perthtemp)
library(tidyverse)
#define where you want the breaks in the historgram
userbreak <- c(8,10,12,14,16,18,20,22,24,26)
# remove the ID and site columns
Perthtemp <- Aucitytemp2 %>%
filter(site=="Perth")
t<-Perthtemp %>%
dplyr::select(Jan:Dec)
?hist
hist((as.numeric(t)),
breaks=userbreak,
col="red",
main="Histogram of Perth Temperature",
xlab="Temperature",
ylab="Frequency")
#Check out the histogram information R generated
histinfo <- as.numeric(t) %>%
as.numeric()%>%
hist(.)
histinfo
#Using more data
plot(Ausoutline$geom)
class(Ausoutline)
AusoutSIMPLE <- Ausoutline %>%
st_simplify(., dTolerance = 1000) %>%
st_geometry()%>%
plot()
print(Ausoutline)
crs(worldclimtemp)
#Perfect! Now let’s continue…
Austemp <- Ausoutline %>%
# now crop our temp data to the extent
terra::crop(worldclimtemp,.)
crs(worldclimtemp)
?crs
library(sp)
library(raster)
library(terra)
#this works nicely for rasters
crs(worldclimtemp)
crs(worldclimtemp)
print(Ausoutline)
worldclimtemp
View(worldclimtemp)
#Raster location
#let’s make a dataframe of some sample sites — Australian cities/towns.
site <- c("Brisbane", "Melbourne", "Perth", "Sydney", "Broome", "Darwin", "Orange",
"Bunbury", "Cairns", "Adelaide", "Gold Coast", "Canberra", "Newcastle",
"Wollongong", "Logan City" )
lon <- c(153.03, 144.96, 115.86, 151.21, 122.23, 130.84, 149.10, 115.64, 145.77,
138.6, 153.43, 149.13, 151.78, 150.89, 153.12)
lat <- c(-27.47, -37.91, -31.95, -33.87, 17.96, -12.46, -33.28, -33.33, -16.92,
-34.93, -28, -35.28, -32.93, -34.42, -27.64)
#Put all of this inforamtion into one list
samples <- data.frame(site, lon, lat, row.names="site")
# Extract the data from the Rasterstack for all points
AUcitytemp<- terra::extract(worldclimtemp, samples)
source("C:/Users/YU/Desktop/CASA0005/wk3/code.R", echo=TRUE)
gc()
crs(worldclimtemp)
# plot the output
plot(Austemp)
?crop
#get raster data within the outline of the shape
exactAus<-terra::mask(Austemp, Ausoutline)
View(exactAus)
#subset using the known location of the raster
hist(exactAus[[3]], col="red", main ="March temperature")
class(exactAus)
exactAusdf <- exactAus %>%
as.data.frame()
View(exactAus)
View(exactAusdf)
View(gghist)
class(gghist)
library(ggplot2)
# set up the basic histogram
gghist <- ggplot(exactAusdf,
aes(x=Mar)) +
geom_histogram(color="black",
fill="white")+
labs(title="Ggplot2 histogram of Australian March temperatures",
x="Temperature",
y="Frequency")
# add a vertical line to the hisogram showing mean tempearture
gghist + geom_vline(aes(xintercept=mean(Mar,
na.rm=TRUE)),
color="blue",
linetype="dashed",
size=1)+
theme(plot.title = element_text(hjust = 0.5))
View(squishdata)
View(exactAus)
View(exactAusdf)
View(twomonths)
View(meantwomonths)
#Select the colour and fill based on the variable
ggplot(twomonths, aes(x=Temp, color=Month, fill=Month)) +
geom_histogram(position="identity", alpha=0.5)+
geom_vline(data=meantwomonths,
aes(xintercept=mean,
color=Month),
linetype="dashed")+
labs(title="Ggplot2 histogram of Australian Jan and Jun
temperatures",
x="Temperature",
y="Frequency")+
theme_classic()+
theme(plot.title = element_text(hjust = 0.5))
View(AUcitytemp)
meantwomonths
View(squishdata)
View(data_complete_cases)
squishdata
data_complete_cases
# Plot faceted histogram
ggplot(data_complete_cases, aes(x=Temp, na.rm=TRUE))+
geom_histogram(color="black", binwidth = 5)+
labs(title="Ggplot2 faceted histogram of Australian temperatures",
x="Temperature",
y="Frequency")+
facet_grid(Month ~ .)+
theme(plot.title = element_text(hjust = 0.5))
#How about an interactive histogram using plotly…
library(plotly)
# split the data for plotly based on month
jan <- squishdata %>%
drop_na() %>%
filter(., Month=="Jan")
View(jan)
jun <- squishdata %>%
drop_na() %>%
filter(., Month=="Jun")
# give axis titles
x <- list (title = "Temperature")
y <- list (title = "Frequency")
View(x)
# set the bin width
xbinsno<-list(start=0, end=40, size = 2.5)
View(xbinsno)
ihist<-plot_ly(alpha = 0.6)
View(ihist)
# plot the histogram calling all the variables we just set
ihist<-plot_ly(alpha = 0.6) %>%
add_histogram(x = jan$Temp,
xbins=xbinsno, name="January") %>%
add_histogram(x = jun$Temp,
xbins=xbinsno, name="June") %>%
layout(barmode = "overlay", xaxis=x, yaxis=y)
ihist
class(ihist)
ihist<-plot_ly(alpha = 0.6)
ihist
ihist<-plot_ly(alpha = 0.6) %>%
add_histogram(x = jan$Temp,
xbins=xbinsno, name="January") %>%
add_histogram(x = jun$Temp,
xbins=xbinsno, name="June")
ihist
ihist<-plot_ly(alpha = 0.6) %>%
add_histogram(x = jan$Temp,
xbins=xbinsno, name="January") %>%
add_histogram(x = jun$Temp,
xbins=xbinsno, name="June") %>%
layout(barmode = "overlay", xaxis=x, yaxis=y)
ihist
View(squishdata)
meanofall <- squishdata %>%
group_by(Month) %>%
summarise(mean = mean(Temp, na.rm=TRUE))
View(meanofall)
View(sdofall)
View(maxofall)
IQRofall <- squishdata %>%
group_by(Month) %>%
summarize(IQR = IQR(Temp, na.rm=TRUE))
View(IQRofall)
# minimum per month
minofall <- squishdata %>%
group_by(Month) %>%
summarize(min = min(Temp, na.rm=TRUE))
meanwholeyear=squishdata %>%
summarize(meanyear = mean(Temp, na.rm=TRUE))
View(meanwholeyear)
View(squishdata)
jan<-terra::rast(here("wc2.1_5m_tavg", "wc2.1_5m_tavg_01.tif"))
jan
plot(jan)
library(fs)
dir_info("wc2.1_5m_tavg") # 比dir要详细一点，区别是
worldclimtemp
View(Ausoutline)
View(AUcitytemp)
View(AUcitytemp)
View(Aucitytemp2)
Perthtemp <- Aucitytemp2 %>%
filter(site=="Perth")
#Or the row location:
Perthtemp <- Aucitytemp2[3,3:14]
View(Perthtemp)
hist(as.numeric(Perthtemp))
#Check out the histogram information R generated
histinfo <- as.numeric(t) %>%
as.numeric()%>%
hist(.)
histinfo
View(Ausoutline)
ausoutline
Ausoutline
#subset using the known location of the raster
hist(exactAus[[3]], col="red", main ="March temperature")
View(exactAusdf)
#Select the colour and fill based on the variable
ggplot(twomonths, aes(x=Temp, color=Month, fill=Month)) +
geom_histogram(position="identity", alpha=0.5)+
geom_vline(data=meantwomonths,
aes(xintercept=mean,
color=Month),
linetype="dashed")+
labs(title="Ggplot2 histogram of Australian Jan and Jun
temperatures",
x="Temperature",
y="Frequency")+
theme_classic()+
theme(plot.title = element_text(hjust = 0.5))

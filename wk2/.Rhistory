y = ~percent_children_in_reception_year_who_are_obese_2011_12_to_2013_14,
#attribute to display when hovering
text = ~borough,
type = "scatter",
mode = "markers")
plot_ly(LondonBoroughs,
#data for x axis
x = ~male_life_expectancy_2009_13,
#data for y axis
y = percent_children_in_reception_year_who_are_obese_2011_12_to_2013_14,
#attribute to display when hovering
text = ~borough,
type = "scatter",
mode = "markers")
plot_ly(LondonBoroughs,
#data for x axis
x = ~male_life_expectancy_2009_13,
#data for y axis
y = ~x_children_in_reception_year_who_are_obese_2011_12_to_2013_14,
#attribute to display when hovering
text = ~borough,
type = "scatter",
mode = "markers")
plot(LondonBoroughs$male_life_expectancy_2009_13,
LondonBoroughs$percent_children_in_reception_year_who_are_obese_2011_12_to_2013_14)
install.packages("maptools")
install.packages(c("classInt", "tmap"))
install.packages(c("classInt", "tmap"))
install.packages("maptools")
# might also need these ones
install.packages(c("RColorBrewer", "sp", "rgeos",
"tmaptools", "sf", "downloader", "rgdal",
"geojsonio"))
#Load Packages (ignore any error messages about being built under a
#different R version):
library(maptools)
install.packages("maptools")
library(maptools)
library(maptools)
library(maptools)
install.packages("C:/Users/86151/Downloads/maptools_1.1-8.tar.gz", repos = NULL, type = "source")
library(maptools)
install.packages("C:/Users/86151/Downloads/maptools_1.1-8.tar.gz", repos = NULL, type = "source")
library(maptools)
library(maptools)
install.packages("maptools")
install.packages("C:/Users/86151/Downloads/maptools_1.1-8.tar.gz", repos = NULL, type = "source")
library("maptools")
install.packages("C:/Users/86151/Downloads/maptools_1.1-7.tar.gz", repos = NULL, type = "source")
library(maptools)
library(maptools)
install.packages("maptools")
install.packages("C:/Users/86151/Downloads/maptools_1.1-8.tar.gz", repos = NULL, type = "source")
install.packages("BiocManager")
install.packages("BiocManager")
BiocManager::install("maptools")
install.packages("C:/Users/86151/Downloads/maptools_1.1-8.tar.gz", repos = NULL, type = "source")
# this will take a few minutes
EW <- st_read("https://opendata.arcgis.com/datasets/8edafbe3276d4b56aec60991cbddda50_2.geojson")
library(sf)
# this will take a few minutes
EW <- st_read("https://opendata.arcgis.com/datasets/8edafbe3276d4b56aec60991cbddda50_2.geojson")
install.packages("tmaptools")
install.packages("maptools")
EW <- st_read("https://opendata.arcgis.com/datasets/8edafbe3276d4b56aec60991cbddda50_2.geojson")
x <- data.frame(caseID = 1, DOB = 2, Other = 3)
View(x)
clean_names(x)
library(janitor)
clean_names(x)
View(x)
x <- data.frame(caseID = 1, DOB = 2, Other = 3)
View(x)
x %>%
clean_names()
rm(x)
shape <- st_read(
"C:/Users/Andy/OneDrive - University College London/Teaching/CASA0005/2020_2021/CASA0005repo/prac1_data/statistical-gis-boundaries-london/ESRI/London_Borough_Excluding_MHW.shp")
library(sf)
shape <- st_read(
"C:/Users/Andy/OneDrive - University College London/Teaching/CASA0005/2020_2021/CASA0005repo/prac1_data/statistical-gis-boundaries-london/ESRI/London_Borough_Excluding_MHW.shp")
shape <- st_read(
"C:\\Users\\86151\\Desktop\\GIS\\wk1\\statistical-gis-boundaries-london\\ESRI/London_Borough_Excluding_MHW.shp")
View(shape)
shape
flytipping <- read_csv("https://data.london.gov.uk/download/fly-tipping-incidents/536278ff-a391-4f20-bc79-9e705c9b3ec0/fly-tipping-borough.csv")
library(sf)
flytipping <- read_csv("https://data.london.gov.uk/download/fly-tipping-incidents/536278ff-a391-4f20-bc79-9e705c9b3ec0/fly-tipping-borough.csv")
library(readr)
flytipping <- read_csv("https://data.london.gov.uk/download/fly-tipping-incidents/536278ff-a391-4f20-bc79-9e705c9b3ec0/fly-tipping-borough.csv")
dir()
View(Femalelifeexp)
names(df)
class(ds)
class(df)
class(a)
ls()
a <- 3
a
a <- 4 #numeric
a <- c(1,2,3,4,5)
a
a+1
a
class(a)
class(B)
typeof(a)
typeof(B)
typeof(shape)
a <- "hello"
typeof(hello)
typeof(a)
class(a)
a <- factor(c("A","A","B","A","B","B","C","A","C"))
a
typeof(a)
class(a)
retults <- table(a)
retults
attributes(retults)
class(retults)
typeof(retults)
occur <- matrix(c(4,3,2), ncol = 3, byrow = TRUE)
occur
occur <- matrix(c(4,3,2), ncol = 3, byrow = FALSE)
occur
0.3780717*0.3780717
mycsv <- read_csv("fly-tipping—borough.csv")
library(readr)
mycsv <- read_csv("fly-tipping—borough.csv")
library(readr)
mycsv <- read_csv("fly-tipping-borough.csv", locale = locale(encoding = "GBK"), skip = 1)
mycsv
#just for fun, create some more, this time some normally distributed
#vectors of 100 numbers
Data3 <- rnorm(100, mean = 53, sd=34)
X<-function(data, argument1, argument2, argument3)
Data1 <- c(1:100)
Data2 <- c(101:200)
#Plot the data
plot(Data1, Data2, col="red")
Data3 <- rnorm(100, mean = 53, sd=34)
Data4 <- rnorm(100, mean = 64, sd=14)
#plot
plot(Data3, Data4, col="blue")
Data1
summary(Data1)
spec(Data1)
summary(Data3)
sd(Data1)
sd(Data3)
sd(Data4)
?plot
plot
plot(11=Data3, Data4, col="blue")
data.frame[row,column]
df[1:10, 1]
df <- data.frame(Data1, Data2)
plot(df, col="green")
df
class(df)
typeof(df)
df[1:10, 1]
df[5:15,]
df[c(2,3,6),2]
df[,1]
View(df)
library(dplyr)
df <- df %>%
dplyr::rename(column1 = Data1, column2=Data2)
df[["column1"]]
df$column1
df["column1"]
LondonDataOSK<- read.csv("ward-profiles-excel-version.csv",
header = TRUE,
sep = ",",
encoding = "latin1")
View(LondonDataOSK)
?read.csv
LondonData <- read_csv("https://data.london.gov.uk/download/ward-profiles-and-atlas/772d2d64-e8c6-46cb-86f9-e52b4c7851bc/ward-profiles-excel-version.csv",
locale = locale(encoding = "latin1"),
na = "n/a")
LondonData <- read_csv("https://data.london.gov.uk/download/ward-profiles-and-atlas/772d2d64-e8c6-46cb-86f9-e52b4c7851bc/ward-profiles-excel-version.csv",
locale = locale(encoding = "latin1"),
na = "n/a")
class(LondonDataOSK)
class(LondonDataOSK)
LondonData %>%
summarise_all(class)
LondonDataOSK %>%
summarise_all(class)
Datatypelist <- LondonDataOSK %>%
summarise_all(class) %>%
pivot_longer(everything(),
names_to="All_variables",
values_to="Variable_class")
library(dplyr)
library(tidyr)
Datatypelist <- LondonDataOSK %>%
summarise_all(class) %>%
pivot_longer(everything(),
names_to="All_variables",
values_to="Variable_class")
Datatypelist
LondonData <- read_csv("https://data.london.gov.uk/download/ward-profiles-and-atlas/772d2d64-e8c6-46cb-86f9-e52b4c7851bc/ward-profiles-excel-version.csv",
locale = locale(encoding = "latin1"))
LondonData <- edit(LondonDataOSK)
View(LondonData)
View(LondonData)
LondonDataOSK<- read.csv("ward-profiles-excel-version.csv",
header = TRUE,
sep = ",",
encoding = "latin1",)
LondonDataOSK<- read.csv("ward-profiles-excel-version.csv",
header = TRUE,
sep = ",",
encoding = "latin1",na = "n/a")
Datatypelist <- LondonDataOSK %>%
summarise_all(class) %>%
pivot_longer(everything(),
names_to="All_variables",
values_to="Variable_class")
Datatypelist
summary(LondonData)
summary(df)
LondonData%>%
colnames()
View(LondonData)
LondonDataOSK<- read.csv("ward-profiles-excel-version.csv",
header = TRUE,
sep = ",",
encoding = "UTF-8")
LondonDataOSK<- read.csv("ward-profiles-excel-version.csv",
header = TRUE,
sep = ",")
LondonDataOSK<- read.csv("ward-profiles-excel-version.csv",
header = TRUE,
sep = ",",
encoding = "GBK")
LondonDataOSK<- read.csv("ward-profiles-excel-version.csv",
header = TRUE,
sep = ",",
encoding = "latin1")
Femalelifeexp<- LondonData %>%
filter(`Female life expectancy -2009-13`>90)
rlang::last_trace()
colnames(LondonData)
Femalelifeexp<- LondonData %>%
filter(`Female.life.expectancy..2009.13`>90)
View(Femalelifeexp)
summary(Femalelifeexp)
summary(Femalelifeexp$Female.life.expectancy..2009.13)
View(LondonData)
LondonBoroughs<- LondonData %>%
filter(str_detect(`New.code`, "^E09"))
LondonBoroughs<- LondonData %>%
filter(str_detect(`New.code`, "^E09"))
install.packages("stringr")
library(stingr)
library(stringr)
LondonBoroughs<- LondonData %>%
filter(str_detect(`New.code`, "^E09"))
#Check it worked:
LondonBoroughs$`Ward.name`
LondonBoroughs$`Ward.name`
LondonData
spec(LondonData)
summary(LondonData)
count.fields(LondonData)
View(LondonBoroughs)
LondonBoroughs<-LondonBoroughs %>%
distinct()
colnames(LondonBoroughs)
View(LondonBoroughs)
LondonBoroughs_contains<-LondonBoroughs %>%
dplyr::select(contains("expectancy"),
contains("obese..2011.12.to.2013.14"),
contains("Ward.name"))
View(LondonBoroughs_contains)
LondonBoroughs_contains %>%
relocate(ward.name)
relocate(Ward.name)
LondonBoroughs %>%
relocate(Ward.name)
View(LondonBoroughs_contains)
LondonBoroughs_contains %>% relocate(Ward.name)
View(LondonBoroughs_contains)
View(LondonBoroughs)
View(LondonBoroughs_contains)
LondonBoroughs_contains <-  LondonBoroughs_contains %>% relocate(Ward.name)
View(LondonBoroughs_contains)
View(LondonBoroughs_contains)
View(LondonBoroughs)
library(janitor)
LondonBoroughs <- LondonBoroughs %>%
#here the ., means all data
clean_names(., case="big_camel")
View(LondonBoroughs)
View(LondonData)
LondonBoroughs<-LondonData[626:658,]
View(LondonBoroughs)
library(janitor)
LondonBoroughs <- LondonBoroughs %>%
#here the ., means all data
clean_names(., case="big_camel")
View(LondonBoroughs)
Life_expectancy <- LondonBoroughs %>%
#new column with average of male and female life expectancy
mutate(averagelifeexpectancy= (female_life_expectancy_2009_13 +
male_life_expectancy_2009_13)/2)%>%
#new column with normalised life expectancy
mutate(normalisedlifeepectancy= averagelifeexpectancy /
mean(averagelifeexpectancy))%>%
#select only columns we want
dplyr::select(new_code,
borough,
averagelifeexpectancy,
normalisedlifeepectancy)%>%
#arrange in descending order
#ascending is the default and would be
#arrange(normalisedlifeepectancy)
arrange(desc(normalisedlifeepectancy))
LondonBoroughs<-LondonData[626:658,]
View(LondonBoroughs)
LondonBoroughs <- LondonBoroughs %>%
dplyr::rename(Borough=`Ward.name`)%>%
clean_names()
View(LondonBoroughs)
Life_expectancy <- LondonBoroughs %>%
#new column with average of male and female life expectancy
mutate(averagelifeexpectancy= (female.life_expectancy.2009.13 +
male.life_expectancy.2009.13)/2)%>%
#new column with normalised life expectancy
mutate(normalisedlifeepectancy= averagelifeexpectancy /
mean(averagelifeexpectancy))%>%
#select only columns we want
dplyr::select(new.code,
borough,
averagelifeexpectancy,
normalisedlifeepectancy)%>%
#arrange in descending order
#ascending is the default and would be
#arrange(normalisedlifeepectancy)
arrange(desc(normalisedlifeepectancy))
Life_expectancy <- LondonBoroughs %>%
#new column with average of male and female life expectancy
mutate(averagelifeexpectancy= (female.life_expectancy.2009.13 +
male.life_expectancy.2009.13)/2)%>%
#new column with normalised life expectancy
mutate(normalisedlifeepectancy= averagelifeexpectancy /
mean(averagelifeexpectancy))%>%
#select only columns we want
dplyr::select(new.code,
borough,
averagelifeexpectancy,
normalisedlifeepectancy)%>%
#arrange in descending order
#ascending is the default and would be
#arrange(normalisedlifeepectancy)
arrange(desc(normalisedlifeepectancy))
Life_expectancy <- LondonBoroughs %>%
#new column with average of male and female life expectancy
mutate(averagelifeexpectancy= (female.life.expectancy.2009.13 +
male.life.expectancy.2009.13)/2)%>%
#new column with normalised life expectancy
mutate(normalisedlifeepectancy= averagelifeexpectancy /
mean(averagelifeexpectancy))%>%
#select only columns we want
dplyr::select(new.code,
borough,
averagelifeexpectancy,
normalisedlifeepectancy)%>%
#arrange in descending order
#ascending is the default and would be
#arrange(normalisedlifeepectancy)
arrange(desc(normalisedlifeepectancy))
Life_expectancy <- LondonBoroughs %>%
#new column with average of male and female life expectancy
mutate(averagelifeexpectancy= (female_life_expectancy_2009_13 +
male_life_expectancy_2009_13)/2)%>%
#new column with normalised life expectancy
mutate(normalisedlifeepectancy= averagelifeexpectancy /
mean(averagelifeexpectancy))%>%
#select only columns we want
dplyr::select(new.code,
borough,
averagelifeexpectancy,
normalisedlifeepectancy)%>%
#arrange in descending order
#ascending is the default and would be
#arrange(normalisedlifeepectancy)
arrange(desc(normalisedlifeepectancy))
Life_expectancy <- LondonBoroughs %>%
#new column with average of male and female life expectancy
mutate(averagelifeexpectancy= (female_life_expectancy_2009_13 +
male_life_expectancy_2009_13)/2)%>%
#new column with normalised life expectancy
mutate(normalisedlifeepectancy= averagelifeexpectancy /
mean(averagelifeexpectancy))%>%
#select only columns we want
dplyr::select(new_code,
borough,
averagelifeexpectancy,
normalisedlifeepectancy)%>%
#arrange in descending order
#ascending is the default and would be
#arrange(normalisedlifeepectancy)
arrange(desc(normalisedlifeepectancy))
View(Life_expectancy)
Life_expectancy <- LondonBoroughs %>%
#new column with average of male and female life expectancy
mutate(averagelifeexpectancy= (female_life_expectancy_2009_13 +
male_life_expectancy_2009_13)/2)%>%
#new column with normalised life expectancy
mutate(normalisedlifeepectancy= averagelifeexpectancy /
mean(averagelifeexpectancy))%>%
#arrange in descending order
#ascending is the default and would be
#arrange(normalisedlifeepectancy)
arrange(desc(normalisedlifeepectancy))
View(Life_expectancy)
Life_expectancy <- LondonBoroughs %>%
#new column with average of male and female life expectancy
mutate(averagelifeexpectancy= (female_life_expectancy_2009_13 +
male_life_expectancy_2009_13)/2)%>%
#new column with normalised life expectancy
mutate(normalisedlifeepectancy= averagelifeexpectancy /
mean(averagelifeexpectancy))%>%
#select only columns we want
dplyr::select(new_code,
borough,
averagelifeexpectancy,
normalisedlifeepectancy)%>%
#arrange in descending order
#ascending is the default and would be
#arrange(normalisedlifeepectancy)
arrange(desc(normalisedlifeepectancy))
View(Life_expectancy)
head(Life_expectancy)
slice_head(Life_expectancy)
Life_expectancy2 <- Life_expectancy %>%
mutate(UKcompare = case_when(averagelifeexpectancy>81.16 ~ "above UK average",
TRUE ~ "below UK average"))
Life_expectancy2
View(Life_expectancy2)
Life_expectancy2_group <- Life_expectancy2 %>%
mutate(UKdiff = averagelifeexpectancy-81.16)
View(Life_expectancy2_group)
Life_expectancy2_group <- Life_expectancy2 %>%
mutate(UKdiff = averagelifeexpectancy-81.16) %>%
group_by(UKcompare)%>%
summarise(range=max(UKdiff)-min(UKdiff), count=n(), Average=mean(UKdiff))
Life_expectancy2_group
View(Life_expectancy2_group)
Life_expectancy3 <- Life_expectancy %>%
mutate(UKdiff = averagelifeexpectancy-81.16)%>%
mutate(across(where(is.numeric), round, 3))%>%
mutate(across(UKdiff, round, 0))%>%
mutate(UKcompare = case_when(averagelifeexpectancy >= 81 ~
str_c("equal or above UK average by",
UKdiff,
"years",
sep=" "),
TRUE ~ str_c("below UK average by",
UKdiff,
"years",
sep=" ")))%>%
group_by(UKcompare)%>%
summarise(count=n())
View(Life_expectancy3)
Life_expectancy4 <- Life_expectancy %>%
mutate(UKdiff = averagelifeexpectancy-81.16)%>%
mutate(across(is.numeric, round, 3))%>%
mutate(across(UKdiff, round, 0))
View(Life_expectancy4)
plot(LondonBoroughs$male_life_expectancy_2009_13,
LondonBoroughs$percent_children_in_reception_year_who_are_obese_2011_12_to_2013_14)
install.packages("plotly")
library(plotly)
plot_ly(LondonBoroughs,
#data for x axis
x = ~male_life_expectancy_2009_13,
#data for y axis
y = ~percent_children_in_reception_year_who_are_obese_2011_12_to_2013_14,
#attribute to display when hovering
text = ~borough,
type = "scatter",
mode = "markers")
colnames(LondonBoroughs)
library(plotly)
plot_ly(LondonBoroughs,
#data for x axis
x = ~male_life_expectancy_2009_13,
#data for y axis
y = ~x_children_in_reception_year_who_are_obese_2011_12_to_2013_14,
#attribute to display when hovering
text = ~borough,
type = "scatter",
mode = "markers")
install.packages("maptools")
install.packages(c("classInt", "tmap"))
# might also need these ones
install.packages(c("RColorBrewer", "sp", "rgeos",
"tmaptools", "sf", "downloader", "rgdal",
"geojsonio"))
library(maptools)
install.packages("maptools")
library(RColorBrewer)
library(classInt)
library(sp)
library(rgeos)
install.packages("rgeos")

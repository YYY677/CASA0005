class(LondonDataOSK)
View(LondonDataOSK)
ls()
library(dplyr)
library(tidyr)
Datatypelist <- LondonDataOSK %>%
summarise_all(class) %>%
pivot_longer(everything(),
names_to="All_variables",
values_to="Variable_class")
View(Datatypelist)
LondonDataOSK %>%
summarise_all(class)
LondonData <- read_csv("https://data.london.gov.uk/download/ward-profiles-and-atlas/772d2d64-e8c6-46cb-86f9-e52b4c7851bc/ward-profiles-excel-version.csv",
locale = locale(encoding = "latin1"))
?edit()
View(LondonData)
LondonData %>% summarise_all(class)
Datatypelist2 <- LondonData %>%
summarise_all(class) %>%
pivot_longer(everything(),
names_to="All_variables",
values_to="Variable_class")
View(Datatypelist)
View(Datatypelist2)
#If you ever wish to quickly edit data, then use edit()
LondonData <- edit(LondonDataOSK)
#If you ever wish to quickly edit data, then use edit()
LondonData <- edit(LondonDataOSK)
summary(df)
LondonData%>%
colnames()%>%
# just look at the head, top5
head()
LondonBoroughs<-LondonData[626:658,]
View(LondonBoroughs)
colnames(LondonData)
names(LondonData)
Femalelifeexp<- LondonData %>%
filter(`Female.life.expectancy..2009.13`>90)
names(LondonData) <- make.names(names(LondonData), unique = TRUE)
colnames(LondonData)
Femalelifeexp<- LondonData %>%
filter(`Female.life.expectancy..2009.13`>90)
View(Femalelifeexp)
library(stringr)
LondonBoroughs<- LondonData %>%
filter(str_detect(`New.code`, "^E09"))
summary(Femalelifeexp$Female.life.expectancy..2009.13)
LondonBoroughs$`Ward.name`
LondonBoroughs<-LondonBoroughs %>%
distinct()
Life_expectancy <- LondonBoroughs %>%
#new column with average of male and female life expectancy
mutate(averagelifeexpectancy= (female_life_expectancy_2009_13 +
male_life_expectancy_2009_13)/2)%>%
#new column with normalised life expectancy
mutate(normalisedlifeepectancy= averagelifeexpectancy /
mean(averagelifeexpectancy))%>%
#select only columns we want, 不选择将会存储全部列
dplyr::select(new_code,
borough,
averagelifeexpectancy,
normalisedlifeepectancy)%>%
#arrange in descending order
#ascending is the default and would be
#arrange(normalisedlifeepectancy)
arrange(desc(normalisedlifeepectancy))
LondonBoroughs <- LondonBoroughs %>%
dplyr::rename(Borough=`Ward.name`)%>%
clean_names()
library(janitor)
LondonBoroughs <- LondonBoroughs %>%
#here the ., means all data
clean_names(., case="big_camel")
Life_expectancy <- LondonBoroughs %>%
#new column with average of male and female life expectancy
mutate(averagelifeexpectancy= (female_life_expectancy_2009_13 +
male_life_expectancy_2009_13)/2)%>%
#new column with normalised life expectancy
mutate(normalisedlifeepectancy= averagelifeexpectancy /
mean(averagelifeexpectancy))%>%
#select only columns we want, 不选择将会存储全部列
dplyr::select(new_code,
borough,
averagelifeexpectancy,
normalisedlifeepectancy)%>%
#arrange in descending order
#ascending is the default and would be
#arrange(normalisedlifeepectancy)
arrange(desc(normalisedlifeepectancy))
names(LondonBoroughs)
Life_expectancy <- LondonBoroughs %>%
#new column with average of male and female life expectancy
mutate(averagelifeexpectancy= (FemaleLifeExpectancy2009_13 +
MaleLifeExpectancy2009_13)/2)%>%
#new column with normalised life expectancy
mutate(normalisedlifeepectancy= averagelifeexpectancy /
mean(averagelifeexpectancy))%>%
#select only columns we want, 不选择将会存储全部列
dplyr::select(new_code,
borough,
averagelifeexpectancy,
normalisedlifeepectancy)%>%
#arrange in descending order
#ascending is the default and would be
#arrange(normalisedlifeepectancy)
arrange(desc(normalisedlifeepectancy))
View(LondonBoroughs)
Life_expectancy <- LondonBoroughs %>%
#new column with average of male and female life expectancy
mutate(averagelifeexpectancy= (FemaleLifeExpectancy2009_13 +
MaleLifeExpectancy2009_13)/2)%>%
#new column with normalised life expectancy
mutate(normalisedlifeepectancy= averagelifeexpectancy /
mean(averagelifeexpectancy))%>%
#select only columns we want, 不选择将会存储全部列
dplyr::select(NewCode,
WardName,
averagelifeexpectancy,
normalisedlifeepectancy)%>%
#arrange in descending order
#ascending is the default and would be
#arrange(normalisedlifeepectancy)
arrange(desc(normalisedlifeepectancy))
View(Life_expectancy)
#top of data
slice_head(Life_expectancy, n=5)
Life_expectancy2 <- Life_expectancy %>%
mutate(UKcompare = case_when(averagelifeexpectancy>81.16 ~ "above UK average",
TRUE ~ "below UK average"))
Life_expectancy2
#know the range of life expectancies for London Boroughs that are above the national average
Life_expectancy2_group <- Life_expectancy2 %>%
mutate(UKdiff = averagelifeexpectancy-81.16) %>%
group_by(UKcompare)%>%
summarise(range=max(UKdiff)-min(UKdiff), count=n(), Average=mean(UKdiff))
Life_expectancy2_group
View(Life_expectancy2_group)
View(Life_expectancy2)
Life_expectancy3 <- Life_expectancy %>%
mutate(UKdiff = averagelifeexpectancy-81.16)%>%
mutate(across(where(is.numeric), round, 3))%>%
mutate(across(UKdiff, round, 0))%>%
mutate(UKcompare = case_when(averagelifeexpectancy >= 81 ~
str_c("equal or above UK average by",
UKdiff,
"years",
sep=" "),
TRUE ~ str_c("below UK average by",
UKdiff,
"years",
sep=" ")))%>%
group_by(UKcompare)%>%
summarise(count=n())
View(Life_expectancy3)
Life_expectancy4 <- Life_expectancy %>%
mutate(UKdiff = averagelifeexpectancy-81.16)%>%
mutate(across(is.numeric, round, 3))%>%
mutate(across(UKdiff, round, 0))
View(Life_expectancy4)
View(Life_expectancy)
?cross()
plot(LondonBoroughs$male_life_expectancy_2009_13,
LondonBoroughs$percent_children_in_reception_year_who_are_obese_2011_12_to_2013_14)
Hideinstall.packages("maptools")
install.packages("maptools")
install.packages(c("classInt", "tmap"))
library(maptools)
install.packages("maptools")
library(sf)
EW <- st_read("https://opendata.arcgis.com/datasets/8edafbe3276d4b56aec60991cbddda50_2.geojson")
EW <- st_read(here::here("prac2_data",
"Local_Authority_Districts_(December_2015)_Boundaries",
"Local_Authority_Districts_(December_2015)_Boundaries.shp"))
EW <- st_read("Local_Authority_Districts_(December_2015)_Boundaries
/LAD_Dec_2015_UGCB_GB.shp")
getwd()
# shapefile in local folder
EW <- st_read("Local_Authority_Districts_(December_2015)_Boundaries/LAD_Dec_2015_UGCB_GB.shp")
LondonMap<- EW %>%
filter(str_detect(lad15cd, "^E09"))
View(LondonMap)
#plot it using the qtm function
qtm(LondonMap)
library(tmap)
qtm(LondonMap)
names(EW)
BoroughDataMap <- EW %>%
clean_names()
names(BoroughDataMap)
View(LondonMap)
BoroughDataMap <- EW %>%
clean_names()%>%
# the . here just means use the data already loaded
filter(str_detect(lad15cd, "^E09"))%>%
merge(.,
LondonData,
by.x="lad15cd",
by.y="new_code",
no.dups = TRUE)%>%
distinct(.,lad15cd,
.keep_all = TRUE)
names(LondonData)
LondonData <- clean_names(LondonData)
names(LondonData)
?clean_names()
#EW is the data we read in straight from the web
BoroughDataMap <- EW %>%
clean_names()%>%
# the . here just means use the data already loaded
filter(str_detect(lad15cd, "^E09"))%>%
merge(.,
LondonData,
by.x="lad15cd",
by.y="new_code",
no.dups = TRUE)%>%
distinct(.,lad15cd,
.keep_all = TRUE)
View(BoroughDataMap)
BoroughDataMap2 <- EW %>%
clean_names() %>%
filter(str_detect(lad15cd, "^E09"))%>%
left_join(.,
LondonData,
by = c("lad15cd" = "new_code"))
library(tmap)
library(tmaptools)
tmap_mode("plot")
qtm(BoroughDataMap,
fill = "rate_of_job_seekers_allowance_jsa_claimants_2015")
tmaplondon <- BoroughDataMap %>%
st_bbox(.) %>%
tmaptools::read_osm(., type = "osm", zoom = NULL)
install.packages("tmaptools")
tmaplondon <- BoroughDataMap %>%
st_bbox(.) %>%
tmaptools::read_osm(., type = "osm", zoom = NULL)
library(tidyverse)
tmaplondon <- BoroughDataMap %>%
st_bbox(.) %>%
tmaptools::read_osm(., type = "osm", zoom = NULL)
?st_bbox()
library(sf)
tmaplondon <- BoroughDataMap %>%
st_bbox(.) %>%
tmaptools::read_osm(., type = "osm", zoom = NULL)
install.packages("OpenStreetMap")
tmaplondon <- BoroughDataMap %>%
st_bbox(.) %>%
tmaptools::read_osm(., type = "osm", zoom = NULL)
library(OpenStreetMap)
tmap_mode("plot")
library(tmap)
tmap_mode("plot")
tm_shape(tmaplondon)+
tm_rgb()+
tm_shape(BoroughDataMap) +
tm_polygons("rate_of_job_seekers_allowance_jsa_claimants_2015",
style="jenks",
palette="YlOrBr",
midpoint=NA,
title="Rate per 1,000 people",
alpha = 0.5) +
tm_compass(position = c("left", "bottom"),type = "arrow") +
tm_scale_bar(position = c("left", "bottom")) +
tm_layout(title = "Job seekers' Allowance Claimants", legend.position = c("right", "bottom"))
install.packages("rJava")
library(rJava)
# set working directory
#setwd("/Users/clairedooley/Documents/CASA0005/Practicals/Practical_2")
### 2.5.9
library(tmap)
library(tmaptools)
# this first bit of code is the same as in the practical documentation
tmap_mode("plot")
qtm(BoroughDataMap,
fill = "rate_of_job_seekers_allowance_jsa_claimants_2015")
# this is an alternative option to code that includes the read_osm function
# here we use the tm_basemap function to create the basemap
# you can find out more:
?tm_basemap
# interactive map of Job seekers' Allowance Claimants
tmap_mode("view")
tm_shape(BoroughDataMap) +
tm_polygons("rate_of_job_seekers_allowance_jsa_claimants_2015",
style="jenks",
palette="YlOrBr",
midpoint=NA,
title="Rate per 1,000 people",
alpha = 0.5) +
tm_basemap(server = "OpenStreetMap") +
tm_compass(position = c("left", "bottom"),type = "arrow") +
tm_scale_bar(position = c("left", "bottom")) +
tm_layout(title = "Job seekers' Allowance Claimants")
# create life expectancy object for final plot
Life_expectancy4map <- EW %>%
inner_join(.,
Life_expectancy4,
by = c("lad11cd" = "new_code"))%>%
distinct(.,lad11cd,
.keep_all = TRUE)
# set working directory
#setwd("/Users/clairedooley/Documents/CASA0005/Practicals/Practical_2")
### 2.5.9
library(tmap)
library(tmaptools)
library(tidyverse)
# this first bit of code is the same as in the practical documentation
tmap_mode("plot")
qtm(BoroughDataMap,
fill = "rate_of_job_seekers_allowance_jsa_claimants_2015")
# this is an alternative option to code that includes the read_osm function
# here we use the tm_basemap function to create the basemap
# you can find out more:
?tm_basemap
# interactive map of Job seekers' Allowance Claimants
tmap_mode("view")
tm_shape(BoroughDataMap) +
tm_polygons("rate_of_job_seekers_allowance_jsa_claimants_2015",
style="jenks",
palette="YlOrBr",
midpoint=NA,
title="Rate per 1,000 people",
alpha = 0.5) +
tm_basemap(server = "OpenStreetMap") +
tm_compass(position = c("left", "bottom"),type = "arrow") +
tm_scale_bar(position = c("left", "bottom")) +
tm_layout(title = "Job seekers' Allowance Claimants")
# create life expectancy object for final plot
Life_expectancy4map <- EW %>%
inner_join(.,
Life_expectancy4,
by = c("lad11cd" = "new_code"))%>%
distinct(.,lad11cd,
.keep_all = TRUE)
names(LondonBoroughs)
View(Life_expectancy2_group)
View(Life_expectancy3)
View(Life_expectancy4)
View(Life_expectancy)
plot(LondonBoroughs$male_life_expectancy_2009_13,
LondonBoroughs$percent_children_in_reception_year_who_are_obese_2011_12_to_2013_14)
names(LondonBoroughs)
install.packages("plotly")
library(tmap)
remotes::install_github('r-tmap/tmap')
library(tmap)
library(tmaptools)
library(tidyverse)
library(sf)
EW <- st_read("Local_Authority_Districts_(December_2015)_Boundaries/LAD_Dec_2015_UGCB_GB.shp")
View(EW)
View(LondonMap)
names(LondonData)
LondonMap<- EW %>%
filter(str_detect(lad15cd, "^E09"))
View(LondonMap)
names(LondonData)
names(LondonMap)
LondonData <- clean_names(LondonData)
library(janitor)
LondonData <- clean_names(LondonData)
names(LondonMap)
View(BoroughDataMap)
library(tmap)
library(tmaptools)
tmap_mode("plot")
qtm(BoroughDataMap,
fill = "rate_of_job_seekers_allowance_jsa_claimants_2015")
library(tmap)
library(tmaptools)
library(tidyverse)
# this first bit of code is the same as in the practical documentation
tmap_mode("plot")
qtm(BoroughDataMap,
fill = "rate_of_job_seekers_allowance_jsa_claimants_2015")
?tm_basemap
tmaplondon <- BoroughDataMap %>%
st_bbox(.) %>%
tmaptools::read_osm(., type = "osm", zoom = NULL)
# interactive map of Job seekers' Allowance Claimants
tmap_mode("view")
tm_shape(BoroughDataMap) +
tm_polygons("rate_of_job_seekers_allowance_jsa_claimants_2015",
style="jenks",
palette="YlOrBr",
midpoint=NA,
title="Rate per 1,000 people",
alpha = 0.5) +
tm_basemap(server = "OpenStreetMap") +
tm_compass(position = c("left", "bottom"),type = "arrow") +
tm_scale_bar(position = c("left", "bottom")) +
tm_layout(title = "Job seekers' Allowance Claimants")
# create life expectancy object for final plot
Life_expectancy4map <- EW %>%
inner_join(.,
Life_expectancy4,
by = c("lad11cd" = "new_code"))%>%
distinct(.,lad11cd,
.keep_all = TRUE)
names(EW)
Life_expectancy4map <- EW %>%
inner_join(.,
Life_expectancy4,
by = c("lad11cd" = "new_code"))%>%
distinct(.,lad15cd,
.keep_all = TRUE)
Life_expectancy4map <- EW %>%
inner_join(.,
Life_expectancy4,
by = c("lad15cd" = "new_code"))%>%
distinct(.,lad15cd,
.keep_all = TRUE)
names(Life_expectancy4)
Life_expectancy4 <- Life_expectancy4 %>%
clean_names(Life_expectancy4)
Life_expectancy4 <- Life_expectancy4 %>%
clean_names(.)
names(Life_expectancy4)
# create life expectancy object for final plot
Life_expectancy4map <- EW %>%
inner_join(.,
Life_expectancy4,
by = c("lad15cd" = "new_code"))%>%
distinct(.,lad15cd,
.keep_all = TRUE)
View(Life_expectancy4map)
# to get a different basemap for the next example
tmap_mode("view")
tm_shape(Life_expectancy4map) +
tm_polygons("UKdiff",
style="pretty",
palette="Blues",
midpoint=NA,
title="Number of years",
alpha = 0.5) +
tm_basemap(server = "CartoDB.Positron") +
tm_scale_bar(position = c("left", "bottom")) +
tm_layout(title = "Difference in life expectancy")
tmap_mode("view")
tm_shape(Life_expectancy4map) +
tm_polygons("u_kdiff",
style="pretty",
palette="Blues",
midpoint=NA,
title="Number of years",
alpha = 0.5) +
tm_basemap(server = "CartoDB.Positron") +
tm_scale_bar(position = c("left", "bottom")) +
tm_layout(title = "Difference in life expectancy")
tmap_mode("view")
tm_shape(Life_expectancy4map) +
tm_polygons("u_kdiff",
style="pretty",
palette="Blues",
midpoint=NA,
title="Number of years",
alpha = 0.5) +
tm_basemap(server = "CartoDB.Positron") +
tm_scale_bar(position = c("left", "bottom")) +
tm_layout(title = "Difference in life expectancy", legend.position = c("right", "bottom"))
View(Life_expectancy4map)
le4map_list <- Life_expectancy4map %>%
summarise_all(class())
le4map_list <- Life_expectancy4map %>%
summarise_all(class)
le4map_list <- Life_expectancy4map %>%
summarise(across(everything(), class),
geometry = st_union(geometry))
le4map_list <- Life_expectancy4map %>%
summarise(across(where(is.numeric), class),  # 仅对数值列或其他需要的列使用 class()
geometry = st_union(geometry))     # 对 geometry 列使用 st_union 合并几何数据
View(le4map_list)
flytipping <- read_csv("https://data.london.gov.uk/download/fly-tipping-incidents/536278ff-a391-4f20-bc79-9e705c9b3ec0/fly-tipping-borough.csv")
#convert the tibble into a tidy tibble
flytipping_long <- flytipping1 %>%
pivot_longer(
cols = 4:11,
names_to = "tipping_type",
values_to = "count"
)
#convert the tibble into a tidy tibble
flytipping_long <- flytipping %>%
pivot_longer(
cols = 4:11,
names_to = "tipping_type",
values_to = "count"
)
# view the data
view(flytipping_long)
View(flytipping)
#an alternative which just pulls everything out into a single table
flytipping2 <- flytipping1[,1:4]
#an alternative which just pulls everything out into a single table
flytipping2 <- flytipping[,1:4]
View(flytipping2)
#pivot the tidy tibble into one that is suitable for mapping
flytipping_wide <- flytipping_long %>%
pivot_wider(
id_cols = 1:2,
names_from = c(year,tipping_type),
names_sep = "_",
values_from = count
)
view(flytipping_wide)
View(flytipping2)
widefly <- flytipping2 %>%
pivot_wider(
names_from = year,
values_from = total_incidents)
View(widefly)

library(sf)
library(tidyverse)
shape <- st_geometry("Washington_Counties_with_Natural_Shoreline___washsh_area/Washington_Counties_with_Natural_Shoreline___washsh_area.shp")
library(sf)
library(tidyverse)
shape <- st_read("Washington_Counties_with_Natural_Shoreline___washsh_area/Washington_Counties_with_Natural_Shoreline___washsh_area.shp")
plot(shape)
View(shape)
shape %>%
st_geometry() %>%
plot()
shape %>%
st_geometry() %>%
st_simplify(., dTolerance = 1000) %>%
plot()
shape %>%
st_simplify(., dTolerance = 1000) %>%
st_geometry() %>%
plot()
shape %>%
st_simplify(., dTolerance = 1000) %>%
plot()
shape %>%
st_simplify(., dTolerance = 1000) %>%
st_geometry() %>%
plot()
shape %>%
st_geometry() %>%
st_simplify(., dTolerance = 1000) %>%
plot()
mycsv <- read_csv("Report_Card_Assessment_Data_2018-19_School_Year_20241003.csv")
View(mycsv)
View(mycsv)
View(shape)
View(mycsv)
View(shape)
names(mycsv)
sum_mycsv <- myscv %>%
group_by("County") %>%
summarise(total_expected_count_to_test = sum("Count of students expected to test including previously passed", na.rm = TRUE),
total_passed_count = sum("CountMetStandard"), na.rm = TRUE)
sum_mycsv <- mycsv %>%
group_by("County") %>%
summarise(total_expected_count_to_test = sum("Count of students expected to test including previously passed", na.rm = TRUE),
total_passed_count = sum("CountMetStandard"), na.rm = TRUE)
library(sf)
sum_mycsv <- mycsv %>%
group_by("County") %>%
summarise(total_expected_count_to_test = sum("Count of students expected to test including previously passed", na.rm = TRUE),
total_passed_count = sum("CountMetStandard"), na.rm = TRUE)
rlang::last_trace()
sum_mycsv <- mycsv %>%
group_by("County") %>%
summarise(
total_expected_count_to_test = sum("Count of students expected to test including previously passed", na.rm = TRUE),
total_passed_count = sum("CountMetStandard", na.rm = TRUE))
sum_mycsv <- mycsv %>%
group_by("County") %>%
summarise(
total_expected_count_to_test = sum(`Count of students expected to test including previously passed`, na.rm = TRUE),
total_passed_count = sum(`CountMetStandard`, na.rm = TRUE))
sum_mycsv <- mycsv %>%
group_by(County) %>%
summarise(
total_expected_count_to_test = sum(`Count of students expected to test including previously passed`, na.rm = TRUE),
total_passed_count = sum(`CountMetStandard`, na.rm = TRUE))
summary(mycsv)
sum_mycsv <- mycsv %>%
# 如果有需要先将列转换为数值型
mutate(
`Count of students expected to test including previously passed` = as.numeric(`Count of students expected to test including previously passed`),
CountMetStandard = as.numeric(CountMetStandard)
)
View(sum_mycsv)
summary(sum_mycsv)
sum_mycsv <- mycsv %>%
# 如果有需要先将列转换为数值型
mutate(
`Count of students expected to test including previously passed` = as.numeric(`Count of students expected to test including previously passed`),
CountMetStandard = as.numeric(CountMetStandard)
) %>%
group_by(County) %>%
summarise(
total_expected_count_to_test = sum(`Count of students expected to test including previously passed`, na.rm = TRUE),
total_passed_count = sum(CountMetStandard, na.rm = TRUE)
)
View(sum_mycsv)
View(sum_mycsv)
shape %>%
shape_merge <- shape %>%
merge(.,)
names(shape)
shape_merge <- shape %>%
merge(.,
by.x="COUNTYLABE",
by.y="County")
shape_merge <- shape %>%
merge(.,
sum_mycsv
by.x="COUNTYLABE",
shape_merge <- shape %>%
merge(.,
sum_mycsv,
by.x="COUNTYLABE",
by.y="County")
View(shape_merge)
names(shape_merge)
shape_merge %>%
mutate( meeting_rate = total_passed_count/total_expected_count_to_test)
View(shape_merge)
shape_merge %>%
mutate(., meeting_rate = total_passed_count/total_expected_count_to_test)
shape_merge %>%
mutate(meeting_rate = total_passed_count/total_expected_count_to_test)
View(shape_merge)
shape_merge <- shape_merge %>%
mutate(meeting_rate = total_passed_count/total_expected_count_to_test)
View(shape_merge)
library(tmap)
# 绘制地图并根据 meeting_rate 进行颜色填充
tm_shape(shape_merge) +
tm_polygons("meeting_rate", title = "Meeting Rate", palette = "blue") +
tm_layout(title = "Meeting Rate by Region")
tm_shape(shape_merge) +
tm_polygons("meeting_rate", title = "Meeting Rate", palette = "red") +
tm_layout(title = "Meeting Rate by Region")
tm_shape(shape_merge) +
tm_polygons(
"meeting_rate",
title = "Meeting Rate",
palette = "red"
breaks = seq(0.29, 0.66, length.out = 5) # 定义渐变范围为0.29到0.66，分为5个层级
tm_shape(shape_merge) +
tm_polygons(
"meeting_rate",
title = "Meeting Rate",
palette = "red",
breaks = seq(0.29, 0.66, length.out = 5) # 定义渐变范围为0.29到0.66，分为5个层级
) +
tm_layout(title = "Meeting Rate by Region")
# 绘制地图并根据 meeting_rate 进行颜色填充
tm_shape(shape_merge) +
tm_polygons(
"meeting_rate",
title = "Meeting Rate",
palette = "YlOrRd", # 黄色到红色渐变调色板
breaks = seq(0.29, 0.66, length.out = 5) # 定义渐变范围为0.29到0.66，分为5个层级
) +
tm_layout(title = "Meeting Rate by Region")
tm_shape(shape_merge) +
tm_polygons(
"meeting_rate",
title = "Meeting Rate",
palette = "YlOrRd", # 黄色到红色渐变调色板
breaks = seq(0.29, 0.66, length.out = 10) # 定义渐变范围为0.29到0.66，分为5个层级
) +
tm_layout(title = "Meeting Rate by Region")
